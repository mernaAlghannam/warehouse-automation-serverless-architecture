openapi: 3.0.3
info:
  title: Warehouse Automation
  # description: |-
  #   This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
  #   Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
  #   You can now help us improve the API whether it's by making changes to the definition itself or to the code.
  #   That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

  #   _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_
    
  #   Some useful links:
  #   - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
  #   - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  version: 1.0.0
servers:
  - url: https://shipping-data-api.azurewebsites.net/api
tags:
  - name: shipping information
    description: Everything about shipping informtion
paths:
  /update-shipping-data:
    post:
      tags:
        - shipping information
      summary: Add a new pet to the store
      description: Add a new pet to the store
      operationId: post-update-shipping-data
      requestBody:
        description: Create a new pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shipper'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            text/plain:
              example: successfully added shipper data to database
        '401':
          description: Unauthorized (must added key in code autorization section)
      security:
        - code: []
  /get-shipping-data:
    get:
      tags:
        - shipping information
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: get-shipping-data
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shipper'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shipper'
        '403':
          description: Invalid key
      security:
        - code: []
components:
  schemas:
    Shipper:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: string
          example: testing123
        Received:
          type: array
          items:
            type: object
            properties:
              Date:
                type: string
                example: Mar 11, 2022
              WarehouseID: 
                type: string
                example: a908cef7-4c67-40f3-88f7-08a03ba4104e
              ShippingPO: 
                type: string
                example: 3f7b2654-052d-4a4e-905f-87f22a3877a9
              ShipmentID:
                type: string
                example: 4
              BoxesRcvd:
                type: string
                example: 4
  securitySchemes:
    code:
      type: apiKey
      name: code
      in: query